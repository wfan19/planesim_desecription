<?xml version="1.0"?>
<robot name="planesil" xmlns:xacro="http://www.ros.org/wiki/xacro">
    <xacro:include filename="$(find planesim_description)/urdf/materials.xacro" />
    <xacro:include filename="$(find planesim_description)/urdf/macros.xacro" />
    
    <xacro:property name="PI" value="3.14"/>

    <xacro:property name="bodyY" value="0.5"/>
    <xacro:property name="bodyX" value="6"/>
    <xacro:property name="bodyZ" value="0.5"/>
    <xacro:property name="bodyMass" value="300"/>

    <xacro:property name="wingY" value="5"/>
    <xacro:property name="wingX" value="1"/>
    <xacro:property name="wingZ" value="${bodyZ/4}"/>
    <xacro:property name="wingMass" value="100"/>

    <xacro:property name="landingGearY" value="${bodyY}"/>
    <xacro:property name="landingGearX" value="0.125"/>
    <xacro:property name="landingGearZ" value="1"/>
    <xacro:property name="landingGearMass" value="10"/>

    <xacro:property name="wheelWidth" value="0.1"/>
    <xacro:property name="wheelRadius" value="0.25"/>
    <xacro:property name="wheelMass" value="5"/>

    <xacro:property name="propellerBlockX" value="0.25"/>
    <xacro:property name="propellerBlockY" value="${bodyY/2}"/>
    <xacro:property name="propellerBlockZ" value="${bodyZ/2}" />
    <xacro:property name="propellerBlockMass" value="5"/>

    <xacro:property name="propellerX" value="1.5"/>      <!-- Length of blade -->
    <xacro:property name="propellerY" value="0.2"/>   <!-- Width of blade -->
    <xacro:property name="propellerZ" value="0.1"/>    <!-- Thickness of blade -->
    <xacro:property name="propellerMass" value="2"/>

    <!-- X axis is down the runway -->
    <!-- Y axis is to the left of the runway, looking down -->
    <!-- Z axis is up -->

    <link name="body">
        <inertial>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <mass value="${bodyMass}"/>
            <xacro:box_inertia m="${bodyMass}" x="${bodyX}" y="${bodyY}" z="${bodyZ}"/>
        </inertial>

        <collision> 
            <origin xyz="0 0 0" rpy="0 0 0"/> 
            <geometry> 
                <box size="${bodyX} ${bodyY} ${bodyZ}"/> 
            </geometry> 
        </collision>

        <visual> 
            <origin xyz="0 0 0" rpy="0 0 0"/> 
            <geometry> 
                <box size="${bodyX} ${bodyY} ${bodyZ}"/> 
            </geometry> 
            <material name="orange"/>
        </visual>
    </link>

    <gazebo reference="body">
        <material>Gazebo/Orange</material>
    </gazebo>

    <link name="base_link"/>
    <joint name="base_joint" type="fixed">
        <parent link="base_link"/>
        <child link="body"/>
    </joint>


    <xacro:wing name="left" left="1"/>
    <xacro:wing name="right" left="-1"/>

    <xacro:landingGear name="front" front="1"/>
    <xacro:landingGear name="back" front="-1"/>

    <xacro:wheel name="frontLeft_wheel" front="1" left="1" />
    <xacro:wheel name="frontRight_wheel" front="1" left="-1" />
    <xacro:wheel name="backLeft_wheel" front="-1" left="1" />
    <xacro:wheel name="backRight_wheel" front="-1" left="-1" />

    <link name="propellerBlock">
        <inertial>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <mass value="${propellerBlockMass}"/>
            <xacro:box_inertia m="${propellerBlockMass}" x="${propellerBlockX}" y="${propellerBlockY}" z="${propellerBlockZ}"/>
        </inertial>

        <collision> 
            <origin xyz="0 0 0" rpy="0 0 0"/> 
            <geometry> 
                <box size="${propellerBlockX} ${propellerBlockY} ${propellerBlockZ}"/> 
            </geometry> 
        </collision>

        <visual> 
            <origin xyz="0 0 0" rpy="0 0 0"/> 
            <geometry> 
                <box size="${propellerBlockX} ${propellerBlockY} ${propellerBlockZ}"/> 
            </geometry> 
            <material name="orange"/>
        </visual>
    </link>

    <gazebo reference="propellerBlock">
        <material>Gazebo/Orange</material>
    </gazebo>

    <joint name="propellerBlock_joint" type="fixed">
        <parent link="body"/>
        <child link="propellerBlock"/>
        <origin xyz="${bodyX/2 + propellerBlockX/2} 0 0" rpy="0 0 0"/>
    </joint>

    <link name="propeller">
        <inertial>
            <origin xyz="0 0 0" rpy="0 ${PI/2} 0"/>
            <mass value="${propellerMass}"/>
            <xacro:box_inertia m="${propellerMass}" x="${propellerX}" y="${propellerY}" z="${propellerZ}"/>
        </inertial>

        <collision> 
            <origin xyz="0 0 0" rpy="0 ${PI/2} 0"/>
            <geometry> 
                <box size="${propellerX} ${propellerY} ${propellerZ}"/> 
            </geometry> 
        </collision>

        <visual> 
            <origin xyz="0 0 0" rpy="0 ${PI/2} 0"/>
            <geometry> 
                <box size="${propellerX} ${propellerY} ${propellerZ}"/> 
            </geometry> 
            <material name="blue"/>
        </visual>
    </link>

    <gazebo reference="propeller">
        <material>Gazebo/Blue</material>
        <kp>1000000</kp>
        <kd>1000000</kd>
        <mu1>10.0</mu1>
        <mu2>10.0</mu2>
    </gazebo>

    <joint name="propeller_joint" type="continuous">
        <parent link="propellerBlock" />
        <child link="propeller" />
        <origin xyz="${propellerBlockX/2 + propellerZ/2} 0 0" rpy="0 0 0"/>
    </joint>

    <xacro:joint_transmission joint_name="propeller"/>

    <gazebo>
        <plugin name="propellerTopBlade" filename="libLiftDragPlugin.so">
            <a0>0.4</a0>
            <cla>4.752798721</cla>
            <cda>0.6417112299</cda>
            <cma>0</cma>
            <alpha_stall>1.5</alpha_stall>
            <cla_stall>-3.85</cla_stall>
            <cda_stall>-0.9233984055</cda_stall>
            <cma_stall>0</cma_stall>
            <air_density>1.2041</air_density>
            <cp> ${propellerZ/2} 0 ${propellerX/4} </cp>
            <area>${propellerX * propellerY / 2}</area>
            <forward> 0 1 0 </forward>
            <upward> 1 0 0</upward>
            <link_name>propeller</link_name>
        </plugin>

        <plugin name="propellerBottomBlade" filename="libLiftDragPlugin.so">
            <a0>0.4</a0>
            <cla>4.752798721</cla>
            <cda>0.6417112299</cda>
            <cma>0</cma>
            <alpha_stall>1.5</alpha_stall>
            <cla_stall>-3.85</cla_stall>
            <cda_stall>-0.9233984055</cda_stall>
            <cma_stall>0</cma_stall>
            <air_density>1.2041</air_density>
            <cp> ${propellerZ/2} 0 ${-propellerX/4} </cp>
            <area> 0.5 </area>
            <forward> 0 -1 0 </forward>
            <upward> 1 0 0 </upward>
            <link_name>propeller</link_name>
        </plugin>

        <plugin name="leftWing" filename="libLiftDragPlugin.so">
            <a0>0.05984281113</a0>
            <cla>4.752798721</cla>
            <cda>0.6417112299</cda>
            <cma>-1.8</cma>
            <alpha_stall>0.3391428111</alpha_stall>
            <cla_stall>-3.85</cla_stall>
            <cda_stall>-0.9233984055</cda_stall>
            <cma_stall>0</cma_stall>
            <air_density> 1.2041 </air_density>
            <cp> ${wingX/2} ${wingY/2} 0</cp>
            <area> ${(wingX/2) * (wingY/2)}</area>
            <forward> 1 0 0 </forward>
            <upward> 0 0 1 </upward>
            <link_name>left_wing</link_name>
        </plugin>

        <plugin name="rightWing" filename="libLiftDragPlugin.so">
            <a0>0.05984281113</a0>
            <cla>4.752798721</cla>
            <cda>0.6417112299</cda>
            <cma>-1.8</cma>
            <alpha_stall>0.3391428111</alpha_stall>
            <cla_stall>-3.85</cla_stall>
            <cda_stall>-0.9233984055</cda_stall>
            <cma_stall>0</cma_stall>
            <air_density> 1.2041 </air_density>
            <cp> ${wingX/2} ${wingY/2} 0</cp>
            <area> ${(wingX/2) * (wingY/2)}</area>
            <forward> 1 0 0 </forward>
            <upward> 0 0 1 </upward>
            <link_name>right_wing</link_name>
        </plugin>

        <!-- <controller:gazebo_ros_imu name="imu_controller" plugin="libgazebo_ros_imu.so">
            <alwaysOn>true</alwaysOn>
            <updateRate>50.0</updateRate> 
            <bodyName>body</bodyName>
            <topicName>imu_data</topicName>
            <gaussianNoise>2.89e-08</gaussianNoise>
            <xyzOffsets>0 0 0</xyzOffsets>
            <rpyOffsets>0 0 0</rpyOffsets>
            <interface:position name="imu_position"/>
        </controller:gazebo_ros_imu> -->
        
    </gazebo>



    <xacro:property name="counterWeightCoGXOffset" value="${((propellerBlockMass * propellerBlockX/2) + propellerMass * (propellerBlockX/2 + propellerZ/2))
                                                /(propellerBlockMass + propellerMass)}"/> <!-- Center of gravity from the edge of the body -->
    <link name="counterWeight">
        <inertial>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <mass value="${propellerBlockMass + propellerMass}"/>
            <xacro:box_inertia m="${propellerBlockMass + propellerMass}" x="${2 * counterWeightCoGXOffset}" y="${bodyY}" z="${bodyZ}"/>
        </inertial>

        <collision> 
            <origin xyz="0 0 0" rpy="0 0 0"/> 
            <geometry> 
                <box size="${2 * counterWeightCoGXOffset} ${bodyY} ${bodyZ}"/> 
            </geometry> 
        </collision>

        <visual> 
            <origin xyz="0 0 0" rpy="0 0 0"/> 
            <geometry> 
                <box size="${2 * counterWeightCoGXOffset} ${bodyY} ${bodyZ}"/> 
            </geometry> 
            <material name="orange"/>
        </visual>
    </link>

    <gazebo reference="propellerBlock">
        <material>Gazebo/Orange</material>
    </gazebo>

    <joint name="counterWeight_joint" type="fixed">
        <parent link="body"/>
        <child link="counterWeight"/>
        <origin xyz="${-(bodyX/2 + counterWeightCoGXOffset)} 0 0" rpy="0 0 0"/>
    </joint>

    <gazebo>
        <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
            <robotNamespace>/planesim</robotNamespace>
        </plugin>
    </gazebo>

</robot>